# SPDX-License-Identifier: MIT
version: '2'

vars:
  PROXY_ARGS: '{{if .DOCKER_HTTP_PROXY }}--build-arg http_proxy={{.DOCKER_HTTP_PROXY}} --build-arg HTTP_PROXY={{.DOCKER_HTTP_PROXY}} --build-arg https_proxy={{.DOCKER_HTTP_PROXY}} --build-arg HTTPS_PROXY={{.DOCKER_HTTP_PROXY}}{{end}}'
  DOCKER_BUILDKIT: 'DOCKER_BUILDKIT={{if eq OS "windows"}}0{{else}}1{{end}}'
  NO_CACHE: '{{default false .NO_CACHE}}'

tasks:
  build:
    desc: Multi-stage build compile in Docker and create the image with default tags
    vars:
      BUILD_ARGS: '--build-arg BUILD_DATE={{.BUILD_DATE}} --build-arg BUILD_VERSION={{.BUILD_VERSION}} --build-arg VCS_REF={{.VCS_REF}} {{.PROXY_ARGS}}'
    cmds:
    - '{{.DOCKER_BUILDKIT }} docker build --pull --tag {{.DOCKER_REGISTRY}}/{{.IMAGE_NAME}}:{{.BUILD_VERSION}} --no-cache={{.NO_CACHE}} {{.BUILD_ARGS}} .'
    - task: tag
      vars:
        DOCKER_REGISTRY: '{{.DOCKER_REGISTRY}}'
        IMAGE_NAME: '{{.IMAGE_NAME}}'
        BUILD_VERSION: '{{.BUILD_VERSION}}'
        BUILD_VERSION_SHORT: '{{.BUILD_VERSION_SHORT}}'

  test:
    desc: Multi-stage run tests and copy build directory to local machine
    vars:
      BUILD_ARGS: '--build-arg BUILD_DATE={{.BUILD_DATE}} --build-arg BUILD_VERSION={{.BUILD_VERSION}} --build-arg VCS_REF={{.VCS_REF}} {{.PROXY_ARGS}}'
    cmds:
    - '{{.DOCKER_BUILDKIT}} docker build --pull --progress=plain --target test --tag {{.IMAGE_NAME}}-test:{{.VCS_REF}} {{.BUILD_ARGS}} .'
    - |-
      # Clean build directory
      rm -rf build &&
      # Create docker container from image
      id=$(docker create {{.IMAGE_NAME}}-test:{{.VCS_REF}}) &&
      # Copy build results to local machine
      docker cp $id:/workdir/build build &&
      # Remove container
      docker rm -v $id

  tag:
    desc: Tag Docker images
    cmds:
    - docker tag {{.DOCKER_REGISTRY}}/{{.IMAGE_NAME}}:{{.BUILD_VERSION}} {{.DOCKER_REGISTRY}}/{{.IMAGE_NAME}}:{{.BUILD_VERSION_SHORT}}
    - docker tag {{.DOCKER_REGISTRY}}/{{.IMAGE_NAME}}:{{.BUILD_VERSION}} {{.DOCKER_REGISTRY}}/{{.IMAGE_NAME}}:latest

  push-release:
    desc: Push image to {{.DOCKER_REGISTRY}}
    cmds:
    - docker login docker.pkg.github.com --username {{.DOCKER_USERNAME}} --password {{.DOCKER_PASSWORD}}
    - docker push {{.DOCKER_REGISTRY}}/{{.IMAGE_NAME}}:{{.BUILD_VERSION_SHORT}}
